ext.deps = [:]
def versions = [:]
//classpath
versions.android_gradle_plugin = '4.2.1'
versions.kotlin = "1.5.10"
versions.arouter_register = "1.0.2"
versions.bugly_tinker_support = "1.1.5"

//base
versions.appcompat = "1.2.0"
versions.annotations = "1.1.0"
versions.material = "1.3.0"
versions.multidex = "2.0.1"
//ui
versions.cardview = "1.0.0"
versions.constraint_layout = "2.0.1"
versions.recyclerview = "1.1.0"
versions.rvadapterhelper = "3.0.4"
versions.banner = "2.1.0"
versions.smartRefresh = "2.0.1"
versions.flexbox = "2.0.1"
versions.circleImageView = "3.1.0"
versions.lottie = "3.4.4"
versions.palette = "1.0.0"
versions.scale_image_view = "3.10.0"

//kotlin
versions.core_ktx = "1.1.0"
versions.activity = '1.1.0'
versions.fragment = "1.2.1"
//coroutines
versions.coroutines = "1.3.7"
//dagger
versions.dagger = "2.16"
//glide
versions.glide = "4.11.0"
//retrofit
versions.retrofit = "2.9.0"
versions.fastjson = "1.2.73"
versions.retrofit_url_manager = "1.4.0"
versions.chuck = "1.0.3"
//arouter
versions.arouter_api = "1.5.0"
versions.arouter_compiler = "1.2.2"
//lifecycle
versions.lifecycle = "2.2.0"
//room
versions.room = "2.3.0-alpha01"
//rx
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
//AMap
versions.amap_3dmap = "7.8.0"
versions.amap_map2d = "6.0.0"
versions.amap_search = "7.7.0"
versions.amap_location = "5.2.0"

//util
versions.coreutils = "1.0.6"
versions.tbssdk = "43939"

//Tinker & Bugly
versions.tinker_android_lib = "1.9.14.3"
versions.bugly_nativecrashreport = "3.7.471"
versions.bugly_crashreport_upgrade = "1.4.5"
versions.bugly_crashreport = "3.2.3"

versions.apache_commons = "2.5"

versions.dexmaker = "2.2.0"
versions.navigation = "2.3.0-alpha01"
versions.paging = "3.0.0-alpha02"
versions.transition = "1.3.0"
versions.truth = "1.0.1"
versions.work = "2.2.0"
ext.versions = versions

//TODO:base project config
def build_versions = [:]
build_versions.min_sdk = 19
build_versions.compile_sdk = 31
build_versions.target_sdk = 31
build_versions.build_tools = "31.0.0"
ext.build_versions = build_versions

//================================================================================================//
def deps = [:]

//TODO:classpath&plugin
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

deps.bugly_tinker_support = "com.tencent.bugly:tinker-support:$versions.bugly_tinker_support"

//TODO:base
deps.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
deps.annotations = "androidx.annotation:annotation:$versions.annotations"
deps.material = "com.google.android.material:material:$versions.material"
deps.multidex = "androidx.multidex:multidex:$versions.multidex"

//TODO:UI
deps.cardview = "androidx.cardview:cardview:$versions.cardview"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.banner = "com.youth.banner:banner:$versions.banner"
//SmartRefresh
deps.smart_layout = "com.scwang.smart:refresh-layout-kernel:$versions.smartRefresh"
deps.smart_header_classics = "com.scwang.smart:refresh-header-classics:$versions.smartRefresh"
deps.smart_footer_classics = "com.scwang.smart:refresh-footer-classics:$versions.smartRefresh"
deps.smart_header_material = "com.scwang.smart:refresh-header-material:$versions.smartRefresh"
//flexbox
deps.flexbox = "com.google.android:flexbox:$versions.flexbox"
deps.circleImageView = "de.hdodenhof:circleimageview:$versions.circleImageView"
deps.lottie = "com.airbnb.android:lottie:$versions.lottie"
deps.palette = "androidx.palette:palette:$versions.palette"
deps.scale_image_view = "com.davemorrissey.labs:subsampling-scale-image-view-androidx:$versions.scale_image_view"

//TODO:Recycleview
deps.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
deps.rvadapterhelper = "com.github.CymChad:BaseRecyclerViewAdapterHelper:$versions.rvadapterhelper"
//TODO:kotlin
deps.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
def kotlin = [:]
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
deps.kotlin = kotlin
//TODO:coroutines
def coroutines = [:]
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
deps.coroutines = coroutines
//TODO:activity的kotlin扩展包
def activity = [:]
activity.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"
deps.activity = activity
//TODO:fragment中kotlin扩展包
def fragment = [:]
fragment.runtime = "androidx.fragment:fragment:${versions.fragment}"
fragment.runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
fragment.testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.fragment = fragment
//TODO:Dagger
def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger
//TODO:Glide
def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

//TODO:Retrofit
def retrofit = [:]
retrofit.retrofit2 = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gsonConverter = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
deps.retrofit = retrofit
deps.fastjson = "com.alibaba:fastjson:$versions.fastjson"
deps.retrofit_url_manager = "me.jessyan:retrofit-url-manager:$versions.retrofit_url_manager"

//TODO:chuck
def chuck = [:]
chuck.library = "io.github.zhangxinmin528.chuck:library:$versions.chuck"
chuck.library_no_op = "io.github.zhangxinmin528.chuck:library-no-op:$versions.chuck"
deps.chuck = chuck

//TODO:ARouter
def arouter = [:]
arouter.api = "com.alibaba:arouter-api:$versions.arouter_api"
arouter.compiler = "com.alibaba:arouter-compiler:$versions.arouter_compiler"
//classpath
arouter.register = "com.alibaba:arouter-register:$versions.arouter_register"
deps.arouter = arouter

//TODO:Lifecycle
def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle
//TODO:Room
def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room
//TODO:RX
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
//TODO:Navigation
def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation
//TODO:CoreUtil
deps.coreUtils = "io.github.zhangxinmin528.androidutils:coreutils:$versions.coreutils"
//TODO:TBSSDK
deps.tbssdk = "com.tencent.tbs.tbssdk:sdk:$versions.tbssdk"

//TODO:Tinker&Bugly
deps.tinker_android_lib = "com.tencent.tinker:tinker-android-lib:$versions.tinker_android_lib"
deps.bugly_crashreport_upgrade = "com.tencent.bugly:crashreport_upgrade:$versions.bugly_crashreport_upgrade"

deps.bugly_nativecrashreport = "com.tencent.bugly:nativecrashreport:$versions.bugly_nativecrashreport"
deps.bugly_crashreport = "com.tencent.bugly:crashreport:$versions.bugly_crashreport"

//TODO:AMAP
deps.amap_3dmap = "com.amap.api:3dmap:$versions.amap_3dmap"
deps.amap_map2d = "com.amap.api:map2d:$versions.amap_map2d"
deps.amap_search = "com.amap.api:search:$versions.amap_search"
deps.amap_location = "com.amap.api:location:$versions.amap_location"

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
deps.arch_core = arch_core

deps.paging_runtime = "androidx.paging:paging-runtime:$versions.paging"

deps.transition = "androidx.transition:transition:$versions.transition"

deps.truth = "com.google.truth:truth:$versions.truth"

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
//    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://jitpack.io' }
    //maven
    handler.maven { url "https://repo1.maven.org/maven2" }
}

ext.addRepos = this.&addRepos
